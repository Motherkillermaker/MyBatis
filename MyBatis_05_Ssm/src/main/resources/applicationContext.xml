<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--    spring希望控制所有业务逻辑组件等等-->
    <context:component-scan base-package="com.atguigu.mybatis">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--    引入数据库的配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--    spring用来控制业务逻辑，数据源，事务控制，aop-->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--    整合mybatis
            1.spring管理所有组件，mapper实现类
                service ==> Dao   @Autowired: 自动注入mapper;
            2.spring用来管理事务，spring声明事务
    -->

    <!--创建事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"></property>

    </bean>

    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


    <!--    让spring创建sqlSessionFactory对象-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
    <!--        configLocation:  指定全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    <!--        mapperLocations: 指定mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mabatis.mapper/*.xml"></property>
    </bean>

<!--    配置一个可以进行批量执行的sqlsession-->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

    <!--    扫描所有的mapper接口实现，让这些mapper能够自动注入-->
    <mybatis-spring:scan base-package="com.atguigu.mybatis.dao"></mybatis-spring:scan>




</beans>